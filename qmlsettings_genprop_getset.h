// generated by parse_properties.py from AOG Settings.cs file
void set_setwin(double &value);
double get_setwin();
void set_setWindow_Location(QPoint &value);
QPoint get_setWindow_Location();
void set_setWindow_Size(QVariant &value);
QVariant get_setWindow_Size();
void set_setWindow_Maximized(bool &value);
bool get_setWindow_Maximized();
void set_setWindow_Minimized(bool &value);
bool get_setWindow_Minimized();
void set_setDisplay_triangleResolution(double &value);
double get_setDisplay_triangleResolution();
void set_setMenu_isMetric(bool &value);
bool get_setMenu_isMetric();
void set_setMenu_isGridOn(bool &value);
bool get_setMenu_isGridOn();
void set_setMenu_isLightbarOn(bool &value);
bool get_setMenu_isLightbarOn();
void set_setF_CurrentDir(QString &value);
QString get_setF_CurrentDir();
void set_setF_isWorkSwitchEnabled(bool &value);
bool get_setF_isWorkSwitchEnabled();
void set_setIMU_pitchZeroX16(int &value);
int get_setIMU_pitchZeroX16();
void set_setIMU_rollZero(double &value);
double get_setIMU_rollZero();
void set_setF_minHeadingStepDistance(double &value);
double get_setF_minHeadingStepDistance();
void set_setAS_lowSteerPWM(char &value);
char get_setAS_lowSteerPWM();
void set_setAS_wasOffset(int &value);
int get_setAS_wasOffset();
void set_setF_UserTotalArea(double &value);
double get_setF_UserTotalArea();
void set_setAS_minSteerPWM(char &value);
char get_setAS_minSteerPWM();
void set_setF_boundaryTriggerDistance(double &value);
double get_setF_boundaryTriggerDistance();
void set_setAS_highSteerPWM(char &value);
char get_setAS_highSteerPWM();
void set_setMenu_isSideGuideLines(bool &value);
bool get_setMenu_isSideGuideLines();
void set_setAS_countsPerDegree(char &value);
char get_setAS_countsPerDegree();
void set_setMenu_isPureOn(bool &value);
bool get_setMenu_isPureOn();
void set_setMenu_isSimulatorOn(bool &value);
bool get_setMenu_isSimulatorOn();
void set_setMenu_isSkyOn(bool &value);
bool get_setMenu_isSkyOn();
void set_setF_culture(QString &value);
QString get_setF_culture();
void set_setF_workingDirectory(QString &value);
QString get_setF_workingDirectory();
void set_setDisplay_lightbarCmPerPixel(int &value);
int get_setDisplay_lightbarCmPerPixel();
void set_setGPS_fixFromWhichSentence(QString &value);
QString get_setGPS_fixFromWhichSentence();
void set_setGPS_headingFromWhichSource(QString &value);
QString get_setGPS_headingFromWhichSource();
void set_setGPS_SimLatitude(double &value);
double get_setGPS_SimLatitude();
void set_setGPS_SimLongitude(double &value);
double get_setGPS_SimLongitude();
void set_setAS_snapDistance(double &value);
double get_setAS_snapDistance();
void set_setF_isWorkSwitchManualSections(bool &value);
bool get_setF_isWorkSwitchManualSections();
void set_setAS_isAutoSteerAutoOn(bool &value);
bool get_setAS_isAutoSteerAutoOn();
void set_setDisplay_lineWidth(int &value);
int get_setDisplay_lineWidth();
void set_setDisplay_panelSimLocation(QPoint &value);
QPoint get_setDisplay_panelSimLocation();
void set_setTram_tramWidth(double &value);
double get_setTram_tramWidth();
void set_setTram_snapAdj(double &value);
double get_setTram_snapAdj();
void set_setTram_passes(int &value);
int get_setTram_passes();
void set_setTram_offset(double &value);
double get_setTram_offset();
void set_setMenu_isOGLZoomOn(int &value);
int get_setMenu_isOGLZoomOn();
void set_setMenu_isCompassOn(bool &value);
bool get_setMenu_isCompassOn();
void set_setMenu_isSpeedoOn(bool &value);
bool get_setMenu_isSpeedoOn();
void set_setDisplay_colorDayFrame(QColor &value);
QColor get_setDisplay_colorDayFrame();
void set_setDisplay_colorNightFrame(QColor &value);
QColor get_setDisplay_colorNightFrame();
void set_setDisplay_colorSectionsDay(QColor &value);
QColor get_setDisplay_colorSectionsDay();
void set_setDisplay_colorFieldDay(QColor &value);
QColor get_setDisplay_colorFieldDay();
void set_setDisplay_isDayMode(bool &value);
bool get_setDisplay_isDayMode();
void set_setDisplay_colorSectionsNight(QColor &value);
QColor get_setDisplay_colorSectionsNight();
void set_setDisplay_colorFieldNight(QColor &value);
QColor get_setDisplay_colorFieldNight();
void set_setDisplay_isAutoDayNight(bool &value);
bool get_setDisplay_isAutoDayNight();
void set_setDisplay_customColors(QString &value);
QString get_setDisplay_customColors();
void set_setDisplay_isTermsAccepted(bool &value);
bool get_setDisplay_isTermsAccepted();
void set_setGPS_isRTK(bool &value);
bool get_setGPS_isRTK();
void set_setDisplay_isStartFullScreen(bool &value);
bool get_setDisplay_isStartFullScreen();
void set_setDisplay_isKeyboardOn(bool &value);
bool get_setDisplay_isKeyboardOn();
void set_setIMU_rollFilter(double &value);
double get_setIMU_rollFilter();
void set_setAS_uTurnSmoothing(int &value);
int get_setAS_uTurnSmoothing();
void set_setIMU_invertRoll(bool &value);
bool get_setIMU_invertRoll();
void set_setAS_ackerman(char &value);
char get_setAS_ackerman();
void set_setF_isWorkSwitchActiveLow(bool &value);
bool get_setF_isWorkSwitchActiveLow();
void set_setAS_Kp(char &value);
char get_setAS_Kp();
void set_setSound_isUturnOn(bool &value);
bool get_setSound_isUturnOn();
void set_setSound_isHydLiftOn(bool &value);
bool get_setSound_isHydLiftOn();
void set_setDisplay_colorTextNight(QColor &value);
QColor get_setDisplay_colorTextNight();
void set_setDisplay_colorTextDay(QColor &value);
QColor get_setDisplay_colorTextDay();
void set_setTram_isTramOnBackBuffer(bool &value);
bool get_setTram_isTramOnBackBuffer();
void set_setDisplay_camZoom(double &value);
double get_setDisplay_camZoom();
void set_setDisplay_colorVehicle(QColor &value);
QColor get_setDisplay_colorVehicle();
void set_setDisplay_vehicleOpacity(int &value);
int get_setDisplay_vehicleOpacity();
void set_setDisplay_isVehicleImage(bool &value);
bool get_setDisplay_isVehicleImage();
void set_setIMU_isHeadingCorrectionFromAutoSteer(QString &value);
QString get_setIMU_isHeadingCorrectionFromAutoSteer();
void set_setDisplay_isTextureOn(bool &value);
bool get_setDisplay_isTextureOn();
void set_setAB_lineLength(double &value);
double get_setAB_lineLength();
void set_SetGPS_udpWatchMsec(int &value);
int get_SetGPS_udpWatchMsec();
void set_setF_isSteerWorkSwitchManualSections(bool &value);
bool get_setF_isSteerWorkSwitchManualSections();
void set_setAS_isConstantContourOn(bool &value);
bool get_setAS_isConstantContourOn();
void set_setAS_guidanceLookAheadTime(double &value);
double get_setAS_guidanceLookAheadTime();
void set_setFeatures(QString &value);
QString get_setFeatures();
void set_setIMU_isDualAsIMU(bool &value);
bool get_setIMU_isDualAsIMU();
void set_setAS_sideHillComp(double &value);
double get_setAS_sideHillComp();
void set_setIMU_isReverseOn(bool &value);
bool get_setIMU_isReverseOn();
void set_setGPS_forwardComp(double &value);
double get_setGPS_forwardComp();
void set_setGPS_reverseComp(double &value);
double get_setGPS_reverseComp();
void set_setGPS_ageAlarm(int &value);
int get_setGPS_ageAlarm();
void set_setGPS_isRTK_KillAutoSteer(bool &value);
bool get_setGPS_isRTK_KillAutoSteer();
void set_setColor_sec01(QColor &value);
QColor get_setColor_sec01();
void set_setColor_sec02(QColor &value);
QColor get_setColor_sec02();
void set_setColor_sec03(QColor &value);
QColor get_setColor_sec03();
void set_setColor_sec04(QColor &value);
QColor get_setColor_sec04();
void set_setColor_sec05(QColor &value);
QColor get_setColor_sec05();
void set_setColor_sec06(QColor &value);
QColor get_setColor_sec06();
void set_setColor_sec07(QColor &value);
QColor get_setColor_sec07();
void set_setColor_sec08(QColor &value);
QColor get_setColor_sec08();
void set_setColor_sec09(QColor &value);
QColor get_setColor_sec09();
void set_setColor_sec10(QColor &value);
QColor get_setColor_sec10();
void set_setColor_sec11(QColor &value);
QColor get_setColor_sec11();
void set_setColor_sec12(QColor &value);
QColor get_setColor_sec12();
void set_setColor_sec13(QColor &value);
QColor get_setColor_sec13();
void set_setColor_sec14(QColor &value);
QColor get_setColor_sec14();
void set_setColor_sec15(QColor &value);
QColor get_setColor_sec15();
void set_setColor_sec16(QColor &value);
QColor get_setColor_sec16();
void set_setColor_isMultiColorSections(bool &value);
bool get_setColor_isMultiColorSections();
void set_setDisplay_customSectionColors(QString &value);
QString get_setDisplay_customSectionColors();
void set_setBrand_TBrand(QString &value);
QString get_setBrand_TBrand();
void set_setHeadland_isSectionControlled(bool &value);
bool get_setHeadland_isSectionControlled();
void set_setSound_isAutoSteerOn(bool &value);
bool get_setSound_isAutoSteerOn();
void set_setRelay_pinConfig(QVector<int> &value);
QVector<int> get_setRelay_pinConfig();
void set_setDisplay_camSmooth(int &value);
int get_setDisplay_camSmooth();
void set_setGPS_dualHeadingOffset(double &value);
double get_setGPS_dualHeadingOffset();
void set_setF_isSteerWorkSwitchEnabled(bool &value);
bool get_setF_isSteerWorkSwitchEnabled();
void set_setF_isRemoteWorkSystemOn(bool &value);
bool get_setF_isRemoteWorkSystemOn();
void set_setDisplay_isAutoStartAgIO(bool &value);
bool get_setDisplay_isAutoStartAgIO();
void set_setAS_ModeXTE(double &value);
double get_setAS_ModeXTE();
void set_setAS_ModeTime(int &value);
int get_setAS_ModeTime();
void set_setVehicle_toolWidth(double &value);
double get_setVehicle_toolWidth();
void set_setVehicle_toolOverlap(double &value);
double get_setVehicle_toolOverlap();
void set_setTool_toolTrailingHitchLength(double &value);
double get_setTool_toolTrailingHitchLength();
void set_setVehicle_numSections(int &value);
int get_setVehicle_numSections();
void set_setSection_position1(QVariant &value);
QVariant get_setSection_position1();
void set_setSection_position2(QVariant &value);
QVariant get_setSection_position2();
void set_setSection_position3(QVariant &value);
QVariant get_setSection_position3();
void set_setSection_position4(QVariant &value);
QVariant get_setSection_position4();
void set_setSection_position5(QVariant &value);
QVariant get_setSection_position5();
void set_setSection_position6(QVariant &value);
QVariant get_setSection_position6();
void set_setSection_position7(QVariant &value);
QVariant get_setSection_position7();
void set_setSection_position8(QVariant &value);
QVariant get_setSection_position8();
void set_setSection_position9(QVariant &value);
QVariant get_setSection_position9();
void set_setSection_position10(QVariant &value);
QVariant get_setSection_position10();
void set_setSection_position11(QVariant &value);
QVariant get_setSection_position11();
void set_setSection_position12(QVariant &value);
QVariant get_setSection_position12();
void set_setSection_position13(QVariant &value);
QVariant get_setSection_position13();
void set_setSection_position14(QVariant &value);
QVariant get_setSection_position14();
void set_setSection_position15(QVariant &value);
QVariant get_setSection_position15();
void set_setSection_position16(QVariant &value);
QVariant get_setSection_position16();
void set_setSection_position17(QVariant &value);
QVariant get_setSection_position17();
void set_purePursuitIntegralGainAB(double &value);
double get_purePursuitIntegralGainAB();
void set_set_youMoveDistance(double &value);
double get_set_youMoveDistance();
void set_setVehicle_antennaHeight(double &value);
double get_setVehicle_antennaHeight();
void set_setVehicle_toolLookAheadOn(double &value);
double get_setVehicle_toolLookAheadOn();
void set_setTool_isToolTrailing(bool &value);
bool get_setTool_isToolTrailing();
void set_setVehicle_toolOffset(double &value);
double get_setVehicle_toolOffset();
void set_setTool_isToolRearFixed(bool &value);
bool get_setTool_isToolRearFixed();
void set_setVehicle_antennaPivot(double &value);
double get_setVehicle_antennaPivot();
void set_setVehicle_wheelbase(double &value);
double get_setVehicle_wheelbase();
void set_setVehicle_hitchLength(double &value);
double get_setVehicle_hitchLength();
void set_setVehicle_toolLookAheadOff(double &value);
double get_setVehicle_toolLookAheadOff();
void set_setVehicle_isPivotBehindAntenna(bool &value);
bool get_setVehicle_isPivotBehindAntenna();
void set_setVehicle_isSteerAxleAhead(bool &value);
bool get_setVehicle_isSteerAxleAhead();
void set_setVehicle_vehicleName(QString &value);
QString get_setVehicle_vehicleName();
void set_setVehicle_slowSpeedCutoff(double &value);
double get_setVehicle_slowSpeedCutoff();
void set_setVehicle_tankTrailingHitchLength(double &value);
double get_setVehicle_tankTrailingHitchLength();
void set_setVehicle_minCoverage(int &value);
int get_setVehicle_minCoverage();
void set_setVehicle_goalPointLookAhead(double &value);
double get_setVehicle_goalPointLookAhead();
void set_setVehicle_maxAngularVelocity(double &value);
double get_setVehicle_maxAngularVelocity();
void set_setVehicle_maxSteerAngle(double &value);
double get_setVehicle_maxSteerAngle();
void set_set_youTurnExtensionLength(int &value);
int get_set_youTurnExtensionLength();
void set_set_youToolWidths(double &value);
double get_set_youToolWidths();
void set_setVehicle_minTurningRadius(double &value);
double get_setVehicle_minTurningRadius();
void set_setVehicle_antennaOffset(double &value);
double get_setVehicle_antennaOffset();
void set_set_youTurnDistanceFromBoundary(double &value);
double get_set_youTurnDistanceFromBoundary();
void set_setVehicle_lookAheadMinimum(double &value);
double get_setVehicle_lookAheadMinimum();
void set_setVehicle_goalPointLookAheadMult(double &value);
double get_setVehicle_goalPointLookAheadMult();
void set_stanleyDistanceErrorGain(double &value);
double get_stanleyDistanceErrorGain();
void set_stanleyHeadingErrorGain(double &value);
double get_stanleyHeadingErrorGain();
void set_setVehicle_isStanleyUsed(bool &value);
bool get_setVehicle_isStanleyUsed();
void set_setTram_BasedOn(int &value);
int get_setTram_BasedOn();
void set_setTram_Skips(int &value);
int get_setTram_Skips();
void set_setTool_isToolTBT(bool &value);
bool get_setTool_isToolTBT();
void set_setVehicle_vehicleType(int &value);
int get_setVehicle_vehicleType();
void set_set_youSkipWidth(int &value);
int get_set_youSkipWidth();
void set_setArdSteer_setting1(char &value);
char get_setArdSteer_setting1();
void set_setArdSteer_minSpeed(char &value);
char get_setArdSteer_minSpeed();
void set_setArdSteer_maxSpeed(char &value);
char get_setArdSteer_maxSpeed();
void set_setArdSteer_setting0(char &value);
char get_setArdSteer_setting0();
void set_setVehicle_hydraulicLiftLookAhead(double &value);
double get_setVehicle_hydraulicLiftLookAhead();
void set_setVehicle_isMachineControlToAutoSteer(bool &value);
bool get_setVehicle_isMachineControlToAutoSteer();
void set_setArdSteer_maxPulseCounts(char &value);
char get_setArdSteer_maxPulseCounts();
void set_setArdMac_hydRaiseTime(char &value);
char get_setArdMac_hydRaiseTime();
void set_setArdMac_hydLowerTime(char &value);
char get_setArdMac_hydLowerTime();
void set_setArdMac_isHydEnabled(char &value);
char get_setArdMac_isHydEnabled();
void set_setTool_defaultSectionWidth(double &value);
double get_setTool_defaultSectionWidth();
void set_setVehicle_toolOffDelay(double &value);
double get_setVehicle_toolOffDelay();
void set_setArdMac_setting0(char &value);
char get_setArdMac_setting0();
void set_setArdSteer_setting2(char &value);
char get_setArdSteer_setting2();
void set_stanleyIntegralDistanceAwayTriggerAB(double &value);
double get_stanleyIntegralDistanceAwayTriggerAB();
void set_setTool_isToolFront(bool &value);
bool get_setTool_isToolFront();
void set_setVehicle_trackWidth(double &value);
double get_setVehicle_trackWidth();
void set_setArdMac_isDanfoss(bool &value);
bool get_setArdMac_isDanfoss();
void set_stanleyIntegralGainAB(double &value);
double get_stanleyIntegralGainAB();
void set_setSection_isFast(bool &value);
bool get_setSection_isFast();
void set_setArdMac_user1(char &value);
char get_setArdMac_user1();
void set_setArdMac_user2(char &value);
char get_setArdMac_user2();
void set_setArdMac_user3(char &value);
char get_setArdMac_user3();
void set_setArdMac_user4(char &value);
char get_setArdMac_user4();
void set_setVehicle_panicStopSpeed(double &value);
double get_setVehicle_panicStopSpeed();
void set_setAS_ModeMultiplierStanley(double &value);
double get_setAS_ModeMultiplierStanley();
void set_setDisplay_brightness(int &value);
int get_setDisplay_brightness();
void set_set_youTurnRadius(double &value);
double get_set_youTurnRadius();
void set_setDisplay_brightnessSystem(int &value);
int get_setDisplay_brightnessSystem();
void set_setTool_isSectionsNotZones(bool &value);
bool get_setTool_isSectionsNotZones();
void set_setTool_numSectionsMulti(int &value);
int get_setTool_numSectionsMulti();
void set_setTool_zones(QVector<int> &value);
QVector<int> get_setTool_zones();
void set_setTool_sectionWidthMulti(double &value);
double get_setTool_sectionWidthMulti();
void set_setDisplay_isBrightnessOn(bool &value);
bool get_setDisplay_isBrightnessOn();
void set_setKey_hotkeys(QString &value);
QString get_setKey_hotkeys();
void set_setVehicle_goalPointLookAheadHold(double &value);
double get_setVehicle_goalPointLookAheadHold();
void set_setTool_isSectionOffWhenOut(bool &value);
bool get_setTool_isSectionOffWhenOut();
void set_set_uTurnStyle(int &value);
int get_set_uTurnStyle();
void set_setGPS_minimumStepLimit(double &value);
double get_setGPS_minimumStepLimit();
void set_setAS_isSteerInReverse(bool &value);
bool get_setAS_isSteerInReverse();
void set_setAS_functionSpeedLimit(double &value);
double get_setAS_functionSpeedLimit();
void set_setAS_maxSteerSpeed(double &value);
double get_setAS_maxSteerSpeed();
void set_setAS_minSteerSpeed(double &value);
double get_setAS_minSteerSpeed();
void set_setBrand_HBrand(QString &value);
QString get_setBrand_HBrand();
void set_setBrand_WDBrand(QString &value);
QString get_setBrand_WDBrand();
void set_setIMU_fusionWeight2(double &value);
double get_setIMU_fusionWeight2();
void set_setDisplay_isSvennArrowOn(bool &value);
bool get_setDisplay_isSvennArrowOn();
void set_setTool_isTramOuterInverted(bool &value);
bool get_setTool_isTramOuterInverted();
void set_setJobMenu_location(QPoint &value);
QPoint get_setJobMenu_location();
void set_setJobMenu_size(QVariant &value);
QVariant get_setJobMenu_size();
void set_setWindow_curveEditLocation(QPoint &value);
QPoint get_setWindow_curveEditLocation();
void set_setWindow_abLineEditLocation(QPoint &value);
QPoint get_setWindow_abLineEditLocation();
void set_setWindow_steerSettingsLocation(QPoint &value);
QPoint get_setWindow_steerSettingsLocation();
void set_setWindow_abCurveCreate(QPoint &value);
QPoint get_setWindow_abCurveCreate();
void set_setWindow_abLineCreate(QPoint &value);
QPoint get_setWindow_abLineCreate();
void set_setTool_trailingToolToPivotLength(double &value);
double get_setTool_trailingToolToPivotLength();
